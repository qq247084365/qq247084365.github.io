<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Unity Gameframework 序言</title>
    <url>/2024/08/09/UnityGameframework_00/</url>
    <content><![CDATA[<h2 id="关于项目使用GameframeWork的记录"><a href="#关于项目使用GameframeWork的记录" class="headerlink" title="关于项目使用GameframeWork的记录"></a>关于项目使用GameframeWork的记录</h2><h3 id="为什么使用GameframeWork？"><a href="#为什么使用GameframeWork？" class="headerlink" title="为什么使用GameframeWork？"></a>为什么使用GameframeWork？</h3><ul>
<li><strong>作用</strong>：保证项目的支撑性以及约束性;</li>
<li><strong>为什么不选择自研</strong>：2.目前因为是新公司，只有两个开发，如果使用自研框架，就算可以保证框架的质量也需要很长的时间，调研了不同的框架，像ET、GameFrameWork，都需要很长的时间，需要不断迭代，不断更新，ET到目前已经超过了五年，GameFrameWork从2013-2021年。</li>
</ul>
<h2 id="GameFramework-和-ET-的区别"><a href="#GameFramework-和-ET-的区别" class="headerlink" title="GameFramework 和 ET 的区别"></a>GameFramework 和 ET 的区别</h2><h3 id="1-设计理念与架构"><a href="#1-设计理念与架构" class="headerlink" title="1. 设计理念与架构"></a>1. 设计理念与架构</h3><h4 id="GameFramework"><a href="#GameFramework" class="headerlink" title="GameFramework"></a>GameFramework</h4><ul>
<li><strong>轻量级框架</strong>：GameFramework 是一个轻量级的游戏框架，专注于提供基础的游戏开发功能，如资源管理、UI 管理、事件系统、网络通信、对象池、配置管理等。</li>
<li><strong>模块化设计</strong>：采用模块化设计，开发者可以根据项目需求选择需要的模块，不必使用全部功能，提升了灵活性和扩展性。</li>
<li><strong>Unity 集成</strong>：主要为 Unity 引擎设计，旨在简化 Unity 游戏开发的常见任务，提供了许多 Unity 专用的工具和组件。</li>
</ul>
<h4 id="ET-ET-Framework"><a href="#ET-ET-Framework" class="headerlink" title="ET (ET Framework)"></a>ET (ET Framework)</h4><ul>
<li><strong>高性能框架</strong>：ET 是一个高性能的分布式游戏服务器框架，特别适用于大规模在线游戏的服务器端开发。它基于 C# 和 .NET 技术栈，支持多线程和多进程。</li>
<li><strong>Actor 模型</strong>：使用 Actor 模型来处理并发和通信，将复杂的多线程编程问题简化为消息传递的方式，非常适合处理大规模并发任务。</li>
<li><strong>分布式系统支持</strong>：提供了强大的分布式系统支持，可以轻松搭建跨服务器、跨进程的系统，适用于大型多人在线游戏（MMO）等需要分布式架构的场景。</li>
</ul>
<h3 id="2-功能与特性"><a href="#2-功能与特性" class="headerlink" title="2. 功能与特性"></a>2. 功能与特性</h3><h4 id="GameFramework-的功能与特性"><a href="#GameFramework-的功能与特性" class="headerlink" title="GameFramework 的功能与特性"></a>GameFramework 的功能与特性</h4><ul>
<li><strong>面向客户端</strong>：主要功能集中在客户端游戏开发，如资源管理、UI 系统、输入管理、声音管理、以及与 Unity 引擎的深度集成。</li>
<li><strong>扩展性</strong>：通过插件系统，开发者可以自定义和扩展框架的功能，适合各种中小型游戏项目。</li>
<li><strong>简易上手</strong>：对于使用 Unity 的开发者来说，GameFramework 的上手门槛较低，易于快速构建游戏原型。</li>
</ul>
<h4 id="ET"><a href="#ET" class="headerlink" title="ET"></a>ET</h4><ul>
<li><strong>面向服务端</strong>：ET 更侧重于服务端的开发，提供了强大的网络通信、分布式处理、负载均衡等功能，适合需要高并发、高可靠性要求的游戏。</li>
<li><strong>Actor 模型的并发处理</strong>：利用 Actor 模型处理并发问题，简化了复杂的多线程编程，并提高了系统的可扩展性和可维护性。</li>
<li><strong>热更新支持</strong>：ET 支持服务端的热更新，可以在不重启服务器的情况下动态更新代码和数据，非常适合长期运营的大型游戏项目。</li>
</ul>
<h3 id="3-应用场景"><a href="#3-应用场景" class="headerlink" title="3. 应用场景"></a>3. 应用场景</h3><h4 id="GameFramework-的应用场景"><a href="#GameFramework-的应用场景" class="headerlink" title="GameFramework 的应用场景"></a>GameFramework 的应用场景</h4><ul>
<li>适合中小型 Unity 项目，尤其是单机游戏或简单的联网游戏。对于需要快速开发和原型验证的项目，GameFramework 提供了足够的功能。</li>
<li>对于那些不需要复杂服务器架构的项目，它是一个非常好的选择。</li>
</ul>
<h4 id="ET-的应用场景"><a href="#ET-的应用场景" class="headerlink" title="ET 的应用场景"></a>ET 的应用场景</h4><ul>
<li>适合大型多人在线游戏（如 MMORPG）、大规模网络游戏，以及对服务端性能和稳定性要求较高的项目。</li>
<li>对于需要分布式系统支持、复杂逻辑处理和高并发处理的项目，ET 是一个强大的选择。</li>
</ul>
<h3 id="4-社区与支持"><a href="#4-社区与支持" class="headerlink" title="4. 社区与支持"></a>4. 社区与支持</h3><h4 id="GameFramework-的社区与支持"><a href="#GameFramework-的社区与支持" class="headerlink" title="GameFramework 的社区与支持"></a>GameFramework 的社区与支持</h4><ul>
<li>社区活跃，适合 Unity 开发者。提供了较为丰富的文档和教程，有许多开发者在使用和贡献。</li>
</ul>
<h4 id="ET-的社区与支持"><a href="#ET-的社区与支持" class="headerlink" title="ET 的社区与支持"></a>ET 的社区与支持</h4><ul>
<li>社区主要集中在服务端开发人员，讨论的内容多与服务器架构、高并发、分布式系统相关。ET 的文档较为完善，但由于其复杂性，学习曲线可能较陡。</li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li><strong>GameFramework</strong> 更适合那些需要快速开发、依赖 Unity 的中小型游戏项目，提供了良好的客户端开发支持。</li>
<li><strong>ET</strong> 则适合那些需要构建复杂的分布式系统、大型在线游戏的项目，特别是在服务端开发和高并发处理方面表现出色。</li>
</ul>
]]></content>
      <tags>
        <tag>Gameframework</tag>
      </tags>
  </entry>
  <entry>
    <title>UnityGameframework Base(基础和工具)</title>
    <url>/2024/08/09/UnityGameframework-01/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>Gameframework</tag>
      </tags>
  </entry>
</search>
